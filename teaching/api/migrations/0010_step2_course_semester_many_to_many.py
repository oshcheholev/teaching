# Generated by Django 5.2.5 on 2025-08-17 08:31

from django.db import migrations, models
import re


def migrate_course_semesters(apps, schema_editor):
    """Migrate existing course semester data to many-to-many relationship"""
    Course = apps.get_model('api', 'Course')
    Semester = apps.get_model('api', 'Semester')
    
    for course in Course.objects.all():
        if hasattr(course, 'semester') and course.semester:
            # Try to find matching semester
            semester_name = course.semester.strip()
            
            # Look for existing semester that matches
            semester = None
            
            # Try exact match first
            try:
                semester = Semester.objects.get(name=semester_name)
            except (Semester.DoesNotExist, Semester.MultipleObjectsReturned):
                # Try to parse and find by year/season
                year_match = re.search(r'20\d{2}', semester_name)
                season_match = re.search(r'[WS]', semester_name)
                
                if year_match and season_match:
                    year = int(year_match.group())
                    season = season_match.group()
                    
                    try:
                        semester = Semester.objects.get(year=year, season=season)
                    except (Semester.DoesNotExist, Semester.MultipleObjectsReturned):
                        # Create new semester if not found
                        semester = Semester.objects.create(
                            name=f"{year}{season}",
                            year=year,
                            season=season,
                            is_active=True
                        )
            
            # Add semester to course if found
            if semester:
                course.semesters.add(semester)


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0009_step1_add_semester_fields'),
    ]

    operations = [
        # Step 1: Add many-to-many field to Course
        migrations.AddField(
            model_name='course',
            name='semesters',
            field=models.ManyToManyField(
                blank=True, 
                help_text='Semesters where this course is offered', 
                related_name='courses', 
                to='api.semester'
            ),
        ),
        
        # Step 2: Migrate existing semester data
        migrations.RunPython(migrate_course_semesters, migrations.RunPython.noop),
        
        # Step 3: Remove old semester field from Course
        migrations.RemoveField(
            model_name='course',
            name='semester',
        ),
        
        # Step 4: Update other Course fields
        migrations.AlterField(
            model_name='course',
            name='credits',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='course',
            name='end_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='course',
            name='start_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='course',
            name='year',
            field=models.IntegerField(blank=True, null=True),
        ),
    ]


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0009_step1_add_semester_fields'),
    ]

    operations = [
    ]
